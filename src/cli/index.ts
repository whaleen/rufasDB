#!/usr/bin/env node
// src/cli/index.ts
import fs from 'fs/promises'
import path from 'path'

async function generateTypes() {
  try {
    const schemaPath = path.join(process.cwd(), 'schema.rufas')
    const schemaContent = await fs.readFile(schemaPath, 'utf-8')

    const types = schemaContent
      .split('model')
      .filter(Boolean)
      .map((model) => {
        const [name, ...fields] = model.trim().split('\n')
        return `${name.trim()} {\n  ${fields.join('\n  ')}\n}`
      })
      .join('\n\n')

    const output = `// Generated by RufasDB
export type Schema = {
${types}
}
`

    await fs.writeFile('rufas.d.ts', output)
    console.log('âœ¨ Generated types file')
  } catch (error) {
    console.error('Failed to generate types:', error)
    process.exit(1)
  }
}

const command = process.argv[2]
if (command === 'generate') {
  generateTypes()
} else {
  console.log('Unknown command. Available commands: generate')
}
